name: Export Supabase Data (CSV + ZIP via pooler 6543)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  export:
    runs-on: ubuntu-latest
    env:
      DB_NAME: postgres
      DB_PORT: 6543
      DB_SSL: require
    steps:
      - uses: actions/checkout@v4

      - name: Install PostgreSQL client & zip
        run: sudo apt-get update && sudo apt-get install -y postgresql-client zip

      - name: Test connection (user=postgres.<ref>)
        env:
          PGPASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          SUPABASE_HOST: ${{ secrets.SUPABASE_POOLER_HOST }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          set -e
          echo "Testing connection to $SUPABASE_HOST:$DB_PORT as postgres.${SUPABASE_PROJECT_REF} ..."
          psql -h "$SUPABASE_HOST" -p "$DB_PORT" -d "$DB_NAME" -U "postgres.${SUPABASE_PROJECT_REF}" -c "select version();"

      - name: Export all tables to CSV
        env:
          PGPASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          SUPABASE_HOST: ${{ secrets.SUPABASE_POOLER_HOST }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          set -e
          rm -rf data_export && mkdir -p data_export
          echo "# Data export summary" > data_summary.md
          echo "_Generated: $(date -u)_  " >> data_summary.md
          echo >> data_summary.md

          echo "Listing public tables..."
          TABLES=$(psql -h "$SUPABASE_HOST" -p "$DB_PORT" -d "$DB_NAME" -U "postgres.${SUPABASE_PROJECT_REF}" -Atc "select tablename from pg_tables where schemaname='public' order by tablename;")

          if [ -z "$TABLES" ]; then
            echo "No tables in public schema."
          fi

          for T in $TABLES; do
            echo "Exporting $T ..."
            psql -h "$SUPABASE_HOST" -p "$DB_PORT" -d "$DB_NAME" -U "postgres.${SUPABASE_PROJECT_REF}" -c "\copy public.\"$T\" to 'data_export/${T}.csv' csv header"
            CNT=$(psql -h "$SUPABASE_HOST" -p "$DB_PORT" -d "$DB_NAME" -U "postgres.${SUPABASE_PROJECT_REF}" -Atc "select count(*) from public.\"$T\";")
            echo "- **$T**: \`$CNT\` rows" >> data_summary.md
          done

          TOT=$(grep -Eo '[0-9]+' data_summary.md | awk '{s+=$1} END{print s+0}')
          echo >> data_summary.md
          echo "**Total rows (sum)**: \`$TOT\`" >> data_summary.md

      - name: Zip CSVs
        run: |
          cd data_export
          zip -9 -r ../data-csv.zip .
          cd -
          echo "Created data-csv.zip"

      - name: Upload CSV ZIP as artifact
        uses: actions/upload-artifact@v4
        with:
          name: supabase-data-csv
          path: data-csv.zip

      - name: Commit data_summary.md to repository
        if: success()
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add data_summary.md
          if git diff --cached --quiet; then
            echo "No changes in data_summary.md, skipping commit."
          else
            git commit -m "chore(data): update data_summary.md"
            git push
          fi
