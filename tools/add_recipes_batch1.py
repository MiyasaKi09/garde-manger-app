#!/usr/bin/env python3
"""
Script rapide pour ajouter 50 recettes du bloc1 (Entr√©es)
Avec v√©rification anti-doublons directement dans le SQL
"""

import re

# Lecture du bloc1
with open('../supabase/bloc1_entrees.txt', 'r', encoding='utf-8') as f:
    content = f.read()

# Extraction des recettes (format: - Nom de recette)
recettes = []
for line in content.split('\n'):
    line = line.strip()
    # Chercher les lignes qui commencent par "- "
    if line.startswith('- '):
        nom = line[2:].strip()  # Enlever "- "
        # Nettoyage
        nom = nom.replace('"', "'")
        if nom and len(nom) > 3:  # √âviter les noms trop courts
            recettes.append(nom)

print(f"‚úÖ {len(recettes)} recettes extraites du bloc1")

# Prendre les 50 premi√®res
recettes_batch1 = recettes[:50]

# G√©n√©ration du SQL avec v√©rification anti-doublons int√©gr√©e
sql_output = """-- ========================================================================
-- BATCH 1 : Ajout de 50 Entr√©es (Bloc 1)
-- V√©rification anti-doublons int√©gr√©e dans le SQL
-- ========================================================================

BEGIN;

-- Les INSERT utilisent ON CONFLICT pour √©viter les doublons
-- Si une recette existe d√©j√† avec le m√™me nom, elle sera ignor√©e

"""

for i, nom in enumerate(recettes_batch1, 1):
    # √âchappement des quotes
    nom_escaped = nom.replace("'", "''")
    
    sql_output += f"""-- {i}. {nom}
INSERT INTO recipes (name, role, description)
VALUES (
  '{nom_escaped}',
  'ENTREE',
  'Entr√©e classique - √Ä compl√©ter'
)
ON CONFLICT (name) DO NOTHING;

"""

sql_output += """
COMMIT;

-- V√©rification
SELECT 
  'Batch 1 termin√©' as message,
  COUNT(*) as nouvelles_recettes
FROM recipes
WHERE description = 'Entr√©e classique - √Ä compl√©ter';
"""

# Sauvegarde
with open('add_recipes_batch1.sql', 'w', encoding='utf-8') as f:
    f.write(sql_output)

print(f"‚úÖ Fichier SQL cr√©√©: add_recipes_batch1.sql")
print(f"üìä 50 recettes pr√™tes √† √™tre ins√©r√©es")
print(f"\nüîç Exemples:")
for i, nom in enumerate(recettes_batch1[:5], 1):
    print(f"   {i}. {nom}")
print(f"   ...")
print(f"\nüí° Le SQL utilise ON CONFLICT (name) DO NOTHING pour √©viter les doublons")
print(f"   ‚Üí Si une recette existe d√©j√†, elle sera ignor√©e automatiquement")
